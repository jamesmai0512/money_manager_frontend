[{"/Users/james/Project/React Js/Money Manager/money_manager_frontend/src/pages/Wallet.js":"1","/Users/james/Project/React Js/Money Manager/money_manager_frontend/src/App.js":"2","/Users/james/Project/React Js/Money Manager/money_manager_frontend/src/pages/Home.js":"3","/Users/james/Project/React Js/Money Manager/money_manager_frontend/src/reportWebVitals.js":"4","/Users/james/Project/React Js/Money Manager/money_manager_frontend/src/index.js":"5","/Users/james/Project/React Js/Money Manager/money_manager_frontend/src/modules/wallet/components/WalletButton.js":"6"},{"size":6403,"mtime":1612962538761,"results":"7","hashOfConfig":"8"},{"size":437,"mtime":1611542501732,"results":"9","hashOfConfig":"8"},{"size":6915,"mtime":1613740862955,"results":"10","hashOfConfig":"8"},{"size":362,"mtime":1611542501735,"results":"11","hashOfConfig":"8"},{"size":500,"mtime":1611542501733,"results":"12","hashOfConfig":"8"},{"size":580,"mtime":1612952430902,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"ak2k1h",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/Users/james/Project/React Js/Money Manager/money_manager_frontend/src/pages/Wallet.js",["31","32","33","34"],"import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport WalletButton from \"../modules/wallet/components/WalletButton\";\nimport {\n\tContainer,\n\tButton,\n\tCol,\n\tRow,\n\tModal,\n\tModalHeader,\n\tModalBody,\n\tModalFooter,\n\tInput,\n\tLabel,\n} from \"reactstrap\";\nimport \"../styles/Wallet.css\";\nimport axios from \"axios\";\nimport { BiArrowBack } from \"react-icons/bi\";\n\nconst Wallet = () => {\n\tconst [wallet, setWallet] = useState([]);\n\tconst [walletDetail, setWalletDetail] = useState([]);\n\tconst [isActive, setIsActive] = useState(true);\n\tconst [createModal, setCreateModal] = useState(false);\n\tconst [editModal, setEditModal] = useState(false);\n\tconst [idWallet, setIdWallet] = useState([]);\n\tconst [newWalletName, setNewWalletName] = useState({\n\t\twallet_name: \"\",\n\t\tmoney: \"\",\n\t});\n\tconst [editWallet, setEditWallet] = useState({\n\t\twallet_name: \"\",\n\t\tmoney: \"\",\n\t});\n\tconst [value, setValue] = useState(\"\");\n\n\tfunction handleTextChange(text) {\n\t\tsetValue(text);\n\n\t\tif (text !== \"\") {\n\t\t\tsetIsActive(true);\n\t\t} else {\n\t\t\tsetIsActive(true);\n\t\t}\n\t}\n\n\tconst refreshPage = () => {\n\t\twindow.location.reload(false);\n\t};\n\n\tconst listOfWallet = wallet.map((item) => (\n\t\t<WalletButton setIdWallet={setIdWallet} key={item.id} item={item} />\n\t));\n\n\tconst toggleAddWallet = () => setCreateModal(!createModal);\n\tconst toggleEditWallet = () => setEditModal(!editModal);\n\n\tuseEffect(() => {\n\t\taxios.get(`http://localhost:3001/wallets/${idWallet}`).then((response) => {\n\t\t\tconst { data } = response;\n\t\t\t// console.log(data);\n\t\t\tsetWalletDetail(data);\n\t\t\tsetEditWallet(data);\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\taxios.get(`http://localhost:3001/wallets/`).then((response) => {\n\t\t\tconst { data } = response;\n\t\t\tsetWallet(data);\n\t\t});\n\t}, []);\n\n\tconst createWallet = () => {\n\t\tconst { wallet_name, money } = newWalletName;\n\t\tconst newData = { wallet_name: wallet_name, money: money };\n\n\t\taxios.post(\"http://localhost:3001/wallets\", newData).then((response) => {\n\t\t\tif (response.status === 201) {\n\t\t\t\ttoggleAddWallet();\n\t\t\t\t//will be have alert success\n\t\t\t}\n\t\t});\n\t};\n\n\tconst updateWallet = () => {\n\t\tconst { wallet_name, money } = editWallet;\n\t\tconst editData = { wallet_name: wallet_name, money: money };\n\n\t\taxios.put(\"http://localhost:3001/wallets/3\", editData).then((response) => {\n\t\t\tif (response.status === 201) {\n\t\t\t\ttoggleEditWallet();\n\t\t\t\t//will be have alert update success\n\t\t\t}\n\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div>\n\t\t\t\t<div className=\"wallet-header\">\n\t\t\t\t\t<Container className=\"wallet-header-container\">\n\t\t\t\t\t\t<div className=\"header-title\">\n\t\t\t\t\t\t\t<a className=\"back-button\" href=\"\">\n\t\t\t\t\t\t\t\t<BiArrowBack />\n\t\t\t\t\t\t\t</a>\n\n\t\t\t\t\t\t\t<h4>Wallets</h4>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Container>\n\t\t\t\t</div>\n\n\t\t\t\t<Container className=\"wallet-detail-container\">\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"5\">\n\t\t\t\t\t\t\t{listOfWallet}\n\n\t\t\t\t\t\t\t<div className=\"wrap-add-wallet\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"add-wallet\"\n\t\t\t\t\t\t\t\t\tcolor=\"success\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\ttoggleAddWallet();\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tADD WALLET\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t<Modal isOpen={createModal} toggle={toggleAddWallet}>\n\t\t\t\t\t\t\t\t\t<ModalHeader toggle={toggleAddWallet}>Add Wallet</ModalHeader>\n\t\t\t\t\t\t\t\t\t<ModalBody>\n\t\t\t\t\t\t\t\t\t\t<div id=\"float-label\">\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"string\"\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetNewWalletName({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t...newWalletName,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twallet_name: event.target.value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleTextChange(event.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<Label className={isActive ? \"Active\" : \"\"}>\n\t\t\t\t\t\t\t\t\t\t\t\tWallet name\n\t\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<div id=\"float-label\">\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"integer\"\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetNewWalletName({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t...newWalletName,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmoney: event.target.value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<Label className={isActive ? \"Active\" : \"\"}>Money</Label>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</ModalBody>\n\t\t\t\t\t\t\t\t\t<ModalFooter>\n\t\t\t\t\t\t\t\t\t\t<Button color=\"secondary\" onClick={toggleAddWallet}>\n\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" onClick={createWallet}>\n\t\t\t\t\t\t\t\t\t\t\tCreate Wallet\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</ModalFooter>\n\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t<Col md=\"7\">\n\t\t\t\t\t\t\t<div className=\"wallet-detail\">\n\t\t\t\t\t\t\t\t<div className=\"wallet-detail-header\">\n\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"wallet-detail-title\">Wallet Detail</h5>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"edit-wallet-button\"\n\t\t\t\t\t\t\t\t\t\t\toutline\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"success\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={toggleEditWallet}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t\t\t<Modal isOpen={editModal} toggle={toggleEditWallet}>\n\t\t\t\t\t\t\t\t\t\t\t<ModalHeader>Edit wallet</ModalHeader>\n\t\t\t\t\t\t\t\t\t\t\t<ModalBody>\n\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"float-label\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"string\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// placeholder={walletDetail.wallet_name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={editWallet.wallet_name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetEditWallet({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...editWallet,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twallet_name: event.target.value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleTextChange(event.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Label className={isActive ? \"Active\" : \"\"}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tWallet name\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"float-label\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"integer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={editWallet.money}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetEditWallet({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...editWallet,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmoney: event.target.value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Label className={isActive ? \"Active\" : \"\"}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tInitial balance\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</ModalBody>\n\t\t\t\t\t\t\t\t\t\t\t<ModalFooter>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"secondary\" onClick={toggleEditWallet}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" onClick={updateWallet}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</ModalFooter>\n\t\t\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"wallet-detail-name\">\n\t\t\t\t\t\t\t\t\t<h3>{walletDetail.wallet_name}</h3>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Wallet;\n","/Users/james/Project/React Js/Money Manager/money_manager_frontend/src/App.js",[],["35","36"],"/Users/james/Project/React Js/Money Manager/money_manager_frontend/src/pages/Home.js",["37","38","39","40","41","42","43","44","45","46"],"/Users/james/Project/React Js/Money Manager/money_manager_frontend/src/reportWebVitals.js",[],["47","48"],"/Users/james/Project/React Js/Money Manager/money_manager_frontend/src/index.js",[],["49","50"],"/Users/james/Project/React Js/Money Manager/money_manager_frontend/src/modules/wallet/components/WalletButton.js",["51"],"import React from \"react\";\n\nconst WalletButton = (props) => {\n\tconst { item, setIdWallet } = props;\n\n\treturn (\n\t\t<a\n\t\t\tonClick={() => {\n\t\t\t\tconst id = item.id;\n\t\t\t\tsetIdWallet(id);\n\t\t\t\t// refreshPage();\n\t\t\t}}\n\t\t>\n\t\t\t<div className=\"wallet-form\">\n\t\t\t\t<div className=\"include-text\">\n\t\t\t\t\t<h9>Included in Total</h9>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"wallet-total\">\n\t\t\t\t\t<div className=\"wallet-name\">\n\t\t\t\t\t\t<p>{item.wallet_name}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"wallet-money\">\n\t\t\t\t\t\t<p>+$ {item.money}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</a>\n\t);\n};\n\nexport default WalletButton;\n",{"ruleId":"52","severity":1,"message":"53","line":35,"column":9,"nodeType":"54","messageId":"55","endLine":35,"endColumn":14},{"ruleId":"52","severity":1,"message":"56","line":47,"column":8,"nodeType":"54","messageId":"55","endLine":47,"endColumn":19},{"ruleId":"57","severity":1,"message":"58","line":65,"column":5,"nodeType":"59","endLine":65,"endColumn":7,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":104,"column":8,"nodeType":"63","endLine":104,"endColumn":43},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"52","severity":1,"message":"68","line":19,"column":9,"nodeType":"54","messageId":"55","endLine":19,"endColumn":15},{"ruleId":"52","severity":1,"message":"69","line":19,"column":17,"nodeType":"54","messageId":"55","endLine":19,"endColumn":26},{"ruleId":"52","severity":1,"message":"70","line":20,"column":9,"nodeType":"54","messageId":"55","endLine":20,"endColumn":17},{"ruleId":"52","severity":1,"message":"71","line":20,"column":19,"nodeType":"54","messageId":"55","endLine":20,"endColumn":30},{"ruleId":"52","severity":1,"message":"72","line":36,"column":11,"nodeType":"54","messageId":"55","endLine":36,"endColumn":27},{"ruleId":"52","severity":1,"message":"73","line":79,"column":8,"nodeType":"54","messageId":"55","endLine":79,"endColumn":22},{"ruleId":"74","severity":1,"message":"75","line":223,"column":12,"nodeType":"76","endLine":223,"endColumn":27},{"ruleId":"61","severity":1,"message":"62","line":242,"column":9,"nodeType":"63","endLine":242,"endColumn":20},{"ruleId":"61","severity":1,"message":"62","line":243,"column":9,"nodeType":"63","endLine":243,"endColumn":20},{"ruleId":"61","severity":1,"message":"62","line":244,"column":9,"nodeType":"63","endLine":244,"endColumn":20},{"ruleId":"64","replacedBy":"77"},{"ruleId":"66","replacedBy":"78"},{"ruleId":"64","replacedBy":"79"},{"ruleId":"66","replacedBy":"80"},{"ruleId":"61","severity":1,"message":"81","line":7,"column":3,"nodeType":"63","endLine":13,"endColumn":4},"no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar","'refreshPage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'idWallet'. Either include it or remove the dependency array.","ArrayExpression",["82"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"'wallet' is assigned a value but never used.","'setWallet' is assigned a value but never used.","'category' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'handleTextChange' is defined but never used.","'toggleCategory' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["83"],["84"],["83"],["84"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"desc":"85","fix":"86"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [idWallet]",{"range":"87","text":"88"},[1599,1601],"[idWallet]"]